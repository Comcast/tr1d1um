// Code generated by mockery v2.6.0. DO NOT EDIT.

package translation

import (
	context "context"

	common "github.com/xmidt-org/tr1d1um/common"

	mock "github.com/stretchr/testify/mock"

	wrp "github.com/xmidt-org/wrp-go/v3"
)

// MockService is an autogenerated mock type for the Service type
type MockService struct {
	mock.Mock
}

// SendWRP provides a mock function with given fields: _a0, _a1, _a2
func (_m *MockService) SendWRP(_a0 *wrp.Message, _a1 string, _a2 context.Context) (*common.XmidtResponse, error) {
	ret := _m.Called(_a0, _a1, _a2)

	var r0 *common.XmidtResponse
	if rf, ok := ret.Get(0).(func(*wrp.Message, string, context.Context) *common.XmidtResponse); ok {
		r0 = rf(_a0, _a1, _a2)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*common.XmidtResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*wrp.Message, string, context.Context) error); ok {
		r1 = rf(_a0, _a1, _a2)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
